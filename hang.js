// Generated by CoffeeScript 1.10.0
(function() {
  var guess, guessed, missed, solution, state, switchState, updateSolution,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  state = 'splash';

  solution = null;

  guessed = [];

  missed = [];

  switchState = function(newState) {
    state = newState;
    $('.state').removeClass('active');
    return $(".state." + state).addClass('active');
  };

  updateSolution = function() {
    var c, s;
    c = 'A';
    s = solution;
    while (c <= 'Z') {
      if (indexOf.call(guessed, c) < 0) {
        s = s.replace(new RegExp(c, 'g'), '_');
      }
      c = String.fromCharCode(c.charCodeAt(0) + 1);
    }
    $('#solution').text(s);
    if (!/_/.test(s)) {
      return alert('You win!');
    }
  };

  guess = function(c) {
    if (!/[A-Z]/.test(c) || indexOf.call(guessed, c) >= 0 || indexOf.call(missed, c) >= 0) {
      return;
    }
    if (solution.indexOf(c) > -1) {
      guessed.push(c);
      return updateSolution();
    } else {
      missed.push(c);
      return $('#missed').text(missed.sort().join(''));
    }
  };

  $(function() {
    $('.splash.state').click(function() {
      switchState('start');
      return $('#enter-solution').focus();
    });
    $('.start.state form').submit(function(e) {
      e.preventDefault();
      solution = $('#enter-solution').val().toUpperCase().replace(/\s\s+/g, ' ').replace(/_/g, '');
      if (/[A-Z]/.test(solution)) {
        updateSolution();
        return switchState('playing');
      } else {
        return $('#enter-solution').val('');
      }
    });
    return $('#entry').keydown(function(e) {
      e.preventDefault();
      guess(String.fromCharCode(e.which));
      return $(this).blur();
    });
  });

}).call(this);
